/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_report_2eproto__INCLUDED
#define PROTOBUF_C_report_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Station Station;
typedef struct _Report Report;


/* --- enums --- */


/* --- messages --- */

struct  _Station
{
  ProtobufCMessage base;
  ProtobufCBinaryData mac;
  uint32_t timestamp;
  uint32_t rssi;
  uint32_t count;
};
#define STATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&station__descriptor) \
    , {0,NULL}, 0, 0, 0 }


struct  _Report
{
  ProtobufCMessage base;
  uint32_t version;
  uint32_t pack_counter;
  uint32_t timestamp;
  ProtobufCBinaryData mac;
  size_t n_stations;
  Station **stations;
};
#define REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&report__descriptor) \
    , 0, 0, 0, {0,NULL}, 0,NULL }


/* Station methods */
void   station__init
                     (Station         *message);
size_t station__get_packed_size
                     (const Station   *message);
size_t station__pack
                     (const Station   *message,
                      uint8_t             *out);
size_t station__pack_to_buffer
                     (const Station   *message,
                      ProtobufCBuffer     *buffer);
Station *
       station__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   station__free_unpacked
                     (Station *message,
                      ProtobufCAllocator *allocator);
/* Report methods */
void   report__init
                     (Report         *message);
size_t report__get_packed_size
                     (const Report   *message);
size_t report__pack
                     (const Report   *message,
                      uint8_t             *out);
size_t report__pack_to_buffer
                     (const Report   *message,
                      ProtobufCBuffer     *buffer);
Report *
       report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   report__free_unpacked
                     (Report *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Station_Closure)
                 (const Station *message,
                  void *closure_data);
typedef void (*Report_Closure)
                 (const Report *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor station__descriptor;
extern const ProtobufCMessageDescriptor report__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_report_2eproto__INCLUDED */
